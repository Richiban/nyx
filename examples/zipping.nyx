def things = list(
    "Alex"
    "Sam"
    "Jo"
)


--  This is the "foreach" syntax in Nyx
for things | thing ->
  println(thing)

--  There's no need for an "enumerate" function or similar, because for-loops
--  in Nyx naturally support zipping. Combine that with concise syntactical 
--  support for ranges, and you get this:
for things, 0.. | thing, i ->
  println(thing)

--  The advantage of this is as follows:
--    * It's very clear that the index being used is a counter, NOT the actual 
--      index of the item (an important distinction that is lost in most languages)
--    * It's immediately clear which loop parameter is the index and which is the
--      item, a distinction that can be quite tricky in other languages when 
--      one is looping over a series of ints