type Item = (
  price: int
  count: int
)

def VendingMachine() ->
  def inventory = [
    "Candy Bar" => Item(price = 12, count = 7),
    "Chips"     => Item(price = 10, count = 4),
    "Pretzels"  => Item(price = 7, count = 11)
  ]

  mut coinsDeposited = 0

  def vend(name: string) -> throws {
    def item = 
      match inventory -tryGet(name)
      | #nil -> 
        return VendingMachineError.invalidSelection
      | (count = 0) ->
        return VendingMachineError.outOfStock
      | (price > coinsDeposited) -> 
        return VendingMachineError.insufficientFunds(item.price - coinsDeposited)
      | item -> 
        item

    set coinsDeposited -= item.price

    def newItem = item with (count = item.count - 1)
    set inventory(name) = newItem

    print("Dispensing {name}")
  }