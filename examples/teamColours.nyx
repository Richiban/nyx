-- Official championship's colors
type TeamColor = #yellow | #black

module TeamColor =
  def create = {
    | "yellow" -> #some(#yellow)
    | "black" -> #some(#black)
    | _ -> #err("Invalid footballers color; acceptable values are: yellow, black") 
  }

  def value = {
    | #yellow -> "yellow"
    | #black -> "black" 
  }

module Game =
  type GameId = bigint

  type Errors = #teamsMustBeUnique
  type Rules = ( maxSetPoints: byte; maxSets: byte )
  type TeamId = NotEmptyString
  type Score = ( by: (TeamId, TeamColor); at: Moment )
  type SetScores = ( number: byte; scores: List(Score) )
  type GameScores = List(List(Score))
  
  type OpenGame = (
    id       : GameId
    teams    : (TeamId, TeamId)
    startedAt: Moment
    rules    : Rules
    score    : GameScores
  )

  type FinishedGame = ( 
    id        : GameId
    teams     : (TeamId, TeamId)
    startedAt : Moment
    finishedAt: Moment
    rules     : Rules
    score     : GameScores
  )

  type Game =
    | #open(OpenGame)
    | #finished(FinishedGame)

  def recordScore: OpenGame, (TeamId, TeamColor), Game -> Game
    = { game, scoringTeam, scoredAt ->
      def finishedSets = game.score(..^1)
      def currentSetWithNewPoint = [(game.score \List.last) ++ [( by = scoringTeam, at = scoredAt )]]

      match game, scoringTeam
      -- You can find active pattern matching implementation on GitHub. Let's skip it here to have better focus.
      | SetInPlay -> #open( game with score = finishedSets @ currentSetWithNewPoint )
      | SetWon -> #open( game with score = finishedSets @ currentSetWithNewPoint @ [[]] )
      | GameWon -> #finished( 
                     id = game.id
                     startedAt = game.startedAt
                     rules = game.rules
                     teams = game.teams
                     finishedAt = scoredAt
                     score = finishedSets @ currentSetWithNewPoint
                   )
    }

  def openGame = { rules, teams, startedAt, gameId ->
    match teams
    | (t1, t2) if t1 = t2 -> Errors.teamsMustBeUnique \#err
    | _ -> #some( 
            id = gameId
            startedAt = startedAt
            teams = teams
            rules = rules
            score = [[]] )
  }
