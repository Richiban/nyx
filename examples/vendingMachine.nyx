type Item = (
  price: int
  count: int
)

def VendingMachine() ->
  def inventory = dict {
    "Candy Bar" => Item(price = 12, count = 7)
    "Chips"     => Item(price = 10, count = 4)
    "Pretzels"  => Item(price = 7, count = 11)
  }

  mut coinsDeposited = 0

  def vend: [Throws, Console] string -> () 
    = throws { name ->
      def item = 
        inventory \tryGet(name) except 
          | #notFound -> 
            return #invalidSelection
          | #some(count = 0) ->
            return #outOfStock
          | #some(price > coinsDeposited) -> 
            return #insufficientFunds(item.price - coinsDeposited)

      set coinsDeposited -= item.price

      def newItem = item with (count = item.count - 1)
      set inventory(name) = newItem

      println("Dispensing {name}")
    }